/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: operations["read_root__get"];
  };
  "/log": {
    get: operations["read_state_log_get"];
  };
  "/state": {
    get: operations["read_state_state_get"];
  };
}

export interface components {
  schemas: {
    /** Action */
    Action:
      | components["schemas"]["AddUser"]
      | components["schemas"]["AddBook"]
      | components["schemas"]["LendBook"];
    /** AddBook */
    AddBook: {
      /**
       * Action Type
       * @enum {string}
       */
      action_type: "AddBook";
      /** User */
      user: string;
      book: components["schemas"]["Book"];
    };
    /** AddUser */
    AddUser: {
      /** Name */
      name: string;
      /** Github Username */
      github_username?: string;
      /**
       * Action Type
       * @enum {string}
       */
      action_type: "AddUser";
    };
    /** Book */
    Book: {
      /** Id */
      id: string;
      /** Isbn */
      isbn: number;
      /** Url */
      url?: string;
      /** Cover Image */
      cover_image?: string;
    };
    /** LendBook */
    LendBook: {
      /**
       * Action Type
       * @enum {string}
       */
      action_type: "LendBook";
      /** From User */
      from_user: string;
      /** To User */
      to_user: string;
      /** Book Id */
      book_id: string;
    };
    /** Log */
    Log: {
      /**
       * Actions
       * @default []
       */
      actions?: components["schemas"]["Action"][];
    };
    /** State */
    State: {
      /**
       * Users
       * @default []
       */
      users?: components["schemas"]["StateUser"][];
      /**
       * Books
       * @default []
       */
      books?: components["schemas"]["StateBook"][];
    };
    /** StateBook */
    StateBook: {
      /** Id */
      id: string;
      /** Isbn */
      isbn: number;
      /** Url */
      url?: string;
      /** Cover Image */
      cover_image?: string;
      owned_by: components["schemas"]["User"];
      held_by: components["schemas"]["User"];
    };
    /** StateUser */
    StateUser: {
      /** Name */
      name: string;
      /** Github Username */
      github_username?: string;
      /**
       * Owned Books
       * @default []
       */
      owned_books?: components["schemas"]["Book"][];
      /**
       * Held Books
       * @default []
       */
      held_books?: components["schemas"]["Book"][];
    };
    /** User */
    User: {
      /** Name */
      name: string;
      /** Github Username */
      github_username?: string;
    };
  };
}

export interface operations {
  read_root__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  read_state_log_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Log"];
        };
      };
    };
  };
  read_state_state_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["State"];
        };
      };
    };
  };
}

export interface external {}
